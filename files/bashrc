# append to the history file, don't overwrite it
shopt -s histappend

# WARNING: IF BASH FAILS TO LOAD THIS, IT CAN OBLITERATE YOUR
# HISTORY. I COPY MY BASH HISTORY ON REGULAR INTERVALS AND
# BACK IT UP WITH CRASHPLAN. I'll probably make a thing to do
# that automatically eventually, but WATCH OUT FOR FAILED BASH
# STARTUPS.

HISTSIZE=10000000000000
HISTFILESIZE=10000000000000
HISTIGNORE=""
HISTCONTROL=""
export HISTTIMEFORMAT="%y-%m-%d %T "
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#           DO NOT ALTER ANYTHING ABOVE THIS LINE
# end history warning

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
# from ubuntu, may be redundant
shopt -s checkwinsize

# the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
# from ubuntu, not enabled by default
shopt -s globstar

# If this is an xterm set the title to user@host:dir
# from ubuntu, may be redundant
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# I find the multi-column ls output hard to scan for a particular file,
# so this shuts it off by default.
alias ls='ls -1'

# enable color support of ls and also add handy aliases
# from ubuntu, modified for other OSes, may be redundant
if [ -x "$(which dircolors)" ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls -1 --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
# from ubuntu, may be redundant
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias thoughts='vim ~/Documents/notes/thoughts.txt'
alias exoself='vim exoself.txt'
alias manual='command man'
function man() {
    echo "Please use the 'manual' command:"
    echo
    echo "    manual" $*
    echo
}

# aliases for docker
alias dme='docker-machine env default'
alias evdm='eval $(docker-machine env default)'
alias dmsd='docker-machine start default'
alias dmls='docker-machine ls'
alias dp='docker ps'
alias dcu='docker-compose up'



# End ubuntu defaults

PROMPT_COMMAND=_promptcommand
function _promptcommand() {
    for command in "${_PROMPT_COMMANDS[@]}"; do
        eval "$command"
    done
}
function add_prompt_command() {
    _PROMPT_COMMANDS=( "${_PROMPT_COMMANDS[@]}" "$1" );
}
PATH="$HOME/local/bin:$HOME/bin:$PATH"
PATH="$PATH:$HOME/src/github_repositories/qmca"


# set color prompt
# this function was intended to allow colors to be changed
# based on host, so I could tell computers apart by prompt color.
# I still might do that.
function color {
    if [ "$1" == "1" ]; then
        z="32"
    elif [ "$1" == "2" ]; then
        z="34"
    elif [ "$1" == "3" ]; then
        z="31"
    else
        z=""
    fi
    echo -n '\[\033['"$z"'m\]'

}
PS1="$(color 3)\u$(color):$(color 2)\w$(color)\$ "
unset c
unset COLORFGBG

# PS1 denotes Prompt String 1
# if git branch exists, display branch in color
parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# fiddling with command prompt colors
# export PS1="\[\e[33m\]\d \[\033[33m\]\W\[\033[33m\]\[\033[0;0]\] $ \e[m "
export PS1="\[\033[33m\]\d \W\033[33m\[\033[0;0] $ \e[m "


# see also http://mywiki.wooledge.org/BashFAQ/088
function flushhistory() {
    history -a;
}
add_prompt_command flushhistory

function updatewindowtitle() {
    echo -ne "\033]0;$PWD - $USER@$HOSTNAME - bash\007"
}
add_prompt_command updatewindowtitle

function displaygit() {
    pushd ~/dotfiles >&/dev/null ; git status -s | _gitabs; popd >&/dev/null 
}
#add_prompt_command displaygit

# don't do dangerous moves or copies without asking!!
alias mv="mv -i"
alias cp="cp -i"

# make file give all the results it knows about, not just the first one
alias file="file -k"

# explanation after the fact:
# I believe this setting is to allow mouse input inside tmux. If I remember
# correctly, vim is funny about that unless you set TERM=xterm. (I'm not
# completely confident that is the origin of this setting, though.)
case "$TERM" in
    screen*)
        export TERM=xterm
        ;;
esac

## For ssh agent forwarding through tmux. Doesn't work very well :(
#if [ ! -z "$SSH_AUTH_SOCK" -a "$SSH_AUTH_SOCK" != "$HOME/.ssh/agent_sock" ] ; then
#    unlink "$HOME/.ssh/agent_sock" 2>/dev/null
#    ln -s "$SSH_AUTH_SOCK" "$HOME/.ssh/agent_sock"
#    export SSH_AUTH_SOCK="$HOME/.ssh/agent_sock"
#fi

# enable programmable completion features
# from ubuntu, may be redundant
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    echo -n "loading completion... "
    . /etc/bash_completion
    echo "done"
elif [ -f $(brew --prefix)/etc/bash_completion ]; then
    echo -n "loading completion... "
    . $(brew --prefix)/etc/bash_completion
    echo "done"
fi

# ~/.local/bin is where pip puts --user installed commands on mac. I think
# it's the same on linux?
if [ -d ~/.local/bin ] ; then
    export PATH="$HOME/.local/bin:$PATH"
fi

function timestamped () {
    @ '"%s - %s" % (terminal.bold(str(datetime.datetime.now())), line)' -plu
}
function countlines() {
    @ '"%s %s" % j[::-1] for j in sorted(collections.Counter(lines).items())' -p
}

export PYTHONIOENCODING="utf-8"

# attempting to set the title for tabs and/or windows:
# set t_ts=^[]1;
# set t_fs=^G
# title() { printf '\e]0;%s\a' "$*"; }
add_prompt_command 'echo -ne "\033]0;${PWD##*/}\007"'
export PATH="/usr/local/sbin:$PATH"


#export PS1="\\[\e[ 0;31m\w$\e[m "
export PATH="$PATH:$HOME/android-sdk/platform-tools"

# for postgres
export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/latest/bin

# alias to trash
alias empty_trash="rm -rf ~/my_trash/*"
